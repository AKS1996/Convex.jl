function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    isdefined(Convex, Symbol("##maximize#7")) && precompile(Tuple{getfield(Convex, Symbol("##maximize#7")),Type,typeof(maximize),Convex.GeoMeanAtom,Convex.LtConstraint,Vararg{Convex.LtConstraint,N} where N})
    isdefined(Convex, Symbol("##maximize#7")) && precompile(Tuple{getfield(Convex, Symbol("##maximize#7")),Type,typeof(maximize),Convex.NegateAtom,Convex.EqConstraint,Vararg{Constraint,N} where N})
    isdefined(Convex, Symbol("##minimize#3")) && precompile(Tuple{getfield(Convex, Symbol("##minimize#3")),Type,typeof(minimize),Convex.AdditionAtom,Convex.GtConstraint,Vararg{Constraint,N} where N})
    isdefined(Convex, Symbol("##minimize#3")) && precompile(Tuple{getfield(Convex, Symbol("##minimize#3")),Type,typeof(minimize),Convex.AdditionAtom,Convex.GtConstraint,Vararg{Convex.GtConstraint,N} where N})
    isdefined(Convex, Symbol("##minimize#3")) && precompile(Tuple{getfield(Convex, Symbol("##minimize#3")),Type,typeof(minimize),Convex.AdditionAtom,Convex.SDPConstraint,Vararg{Constraint,N} where N})
    isdefined(Convex, Symbol("##minimize#3")) && precompile(Tuple{getfield(Convex, Symbol("##minimize#3")),Type,typeof(minimize),Convex.AdditionAtom,Convex.SDPConstraint,Vararg{Convex.SDPConstraint,N} where N})
    isdefined(Convex, Symbol("##satisfy#12")) && precompile(Tuple{getfield(Convex, Symbol("##satisfy#12")),Type,typeof(satisfy),Array{Constraint,1}})
    isdefined(Convex, Symbol("#16#17")) && precompile(Tuple{getfield(Convex, Symbol("#16#17")),Array{Complex{Int64},1},Array{Complex{Float64},1}})
    isdefined(Convex, Symbol("#16#17")) && precompile(Tuple{getfield(Convex, Symbol("#16#17")),Array{Float64,1},Base.ReshapedArray{Int64,1,LinearAlgebra.Adjoint{Int64,Array{Int64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    isdefined(Convex, Symbol("#16#17")) && precompile(Tuple{getfield(Convex, Symbol("#16#17")),Array{Float64,1},LinearAlgebra.Adjoint{Float64,Array{Float64,1}}})
    isdefined(Convex, Symbol("#16#17")) && precompile(Tuple{getfield(Convex, Symbol("#16#17")),Array{Float64,2},Array{Float64,1}})
    isdefined(Convex, Symbol("#16#17")) && precompile(Tuple{getfield(Convex, Symbol("#16#17")),Array{Float64,2},Float64})
    isdefined(Convex, Symbol("#16#17")) && precompile(Tuple{getfield(Convex, Symbol("#16#17")),Float64,Array{Float64,1}})
    isdefined(Convex, Symbol("#16#17")) && precompile(Tuple{getfield(Convex, Symbol("#16#17")),Float64,Array{Float64,2}})
    precompile(Tuple{Core.kwftype(typeof(Convex.minimize)),NamedTuple{(:numeric_type,),Tuple{DataType}},typeof(minimize),Convex.SumLargestEigs,Convex.GtConstraint,Convex.GtConstraint,Vararg{Convex.GtConstraint,N} where N})
    precompile(Tuple{Type{Convex.ExpConstraint},Convex.IndexAtom,Convex.IndexAtom,Int64})
    precompile(Tuple{Type{Convex.HcatAtom},Constant{Array{Int64,1}},Vararg{Convex.AbstractExpr,N} where N})
    precompile(Tuple{Type{Convex.HcatAtom},Convex.AdjointAtom,Vararg{Convex.AbstractExpr,N} where N})
    precompile(Tuple{Type{Convex.HcatAtom},Convex.HcatAtom,Vararg{Convex.AbstractExpr,N} where N})
    precompile(Tuple{Type{Convex.HcatAtom},Convex.ImaginaryAtom,Vararg{Convex.AbstractExpr,N} where N})
    precompile(Tuple{Type{Convex.HcatAtom},Convex.MultiplyAtom,Vararg{Convex.AbstractExpr,N} where N})
    precompile(Tuple{Type{Convex.HcatAtom},Convex.RealAtom,Vararg{Convex.AbstractExpr,N} where N})
    precompile(Tuple{Type{Convex.SOCConstraint},Variable,Vararg{Convex.AbstractExpr,N} where N})
    precompile(Tuple{Type{Convex.SOCElemConstraint},Convex.AdditionAtom,Vararg{Convex.AbstractExpr,N} where N})
    precompile(Tuple{Type{Problem{Float64}},Symbol,Convex.MultiplyAtom,Convex.LtConstraint,Vararg{Constraint,N} where N})
    precompile(Tuple{typeof(*),Array{Complex{Float64},2},Convex.ConicObj})
    precompile(Tuple{typeof(*),Array{Float64,1},Variable})
    precompile(Tuple{typeof(*),Array{Float64,2},Convex.ConicObj})
    precompile(Tuple{typeof(*),Array{Float64,2},Variable})
    precompile(Tuple{typeof(*),Base.ReshapedArray{Float64,2,SparseArrays.SparseMatrixCSC{Float64,Int64},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Convex.ConicObj})
    precompile(Tuple{typeof(*),Int64,Convex.EucNormAtom})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Bool,Int64},Convex.ConicObj})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},Convex.ConicObj})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Float64,Int64},Convex.ConicObj})
    precompile(Tuple{typeof(*),Variable,LinearAlgebra.Adjoint{Int64,Array{Int64,1}}})
    precompile(Tuple{typeof(-),Convex.AdditionAtom,Constant{Int64}})
    precompile(Tuple{typeof(-),Convex.MultiplyAtom,Array{Float64,2}})
    precompile(Tuple{typeof(-),Convex.PartialTransposeAtom,Constant{Array{Complex{Float64},2}}})
    precompile(Tuple{typeof(<=),Variable,Convex.MinAtom})
    precompile(Tuple{typeof(==),Convex.AdditionAtom,Array{Float64,2}})
    precompile(Tuple{typeof(>=),Constant{Array{Float64,2}},Int64})
    precompile(Tuple{typeof(>=),Variable,Int64})
    precompile(Tuple{typeof(Base.__cat),Array{Convex.psocp.SimpleInequalityExpression,1},Tuple{Int64},Tuple{Bool},Array{Convex.psocp.SimpleInequalityExpression,1},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.mapfoldl_impl),typeof(identity),typeof(hcat),NamedTuple{(:init,),Tuple{Convex.MultiplyAtom}},Array{Convex.AbstractExpr,1},Int64})
    precompile(Tuple{typeof(Base.vect),Convex.GtConstraint})
    precompile(Tuple{typeof(Convex.add_terms!),Array{MathOptInterface.VectorAffineTerm{Float64},1},Array{Float64,2},UnitRange{Int64},Array{MathOptInterface.VariableIndex,1}})
    precompile(Tuple{typeof(Convex.add_terms!),Array{MathOptInterface.VectorAffineTerm{Float64},1},SparseArrays.SparseMatrixCSC{Float64,Int64},UnitRange{Int64},Array{MathOptInterface.VariableIndex,1}})
    precompile(Tuple{typeof(Convex.add_terms!),Array{MathOptInterface.VectorAffineTerm{Float64},1},SparseArrays.SparseVector{Float64,Int64},UnitRange{Int64},Array{MathOptInterface.VariableIndex,1}})
    precompile(Tuple{typeof(Convex.conic_form!),Constant{Array{Complex{Float64},2}},Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Constant{Array{Complex{Int64},1}},Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Constant{Array{Float64,2}},Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Constant{Complex{Int64}},Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Constant{Float64},Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Constant{Int64},Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.AbsAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.AdjointAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.DiagAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.DiagMatrixAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.DotMultiplyAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.DotSortAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.EigMaxAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.EigMinAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.EntropyAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.EucNormAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.ExpAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.GeoMeanAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.HcatAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.HuberAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.LogAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.LogDetAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.MatrixFracAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.MaximumAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.MinimumAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.MultiplyAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.NuclearNormAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.OperatorNormAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.PartialTransposeAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.QolElemAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.QuadOverLinAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.RationalNormAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.RelativeEntropyAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.SumAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.SumLargestAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.SumLargestEigs,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.conic_form!),Convex.TransposeAtom,Convex.UniqueConicForms})
    precompile(Tuple{typeof(Convex.permutedims_matrix),NTuple{4,Int64},Array{Int64,1}})
    precompile(Tuple{typeof(Convex.permutedims_matrix),NTuple{5,Int64},Array{Int64,1}})
    precompile(Tuple{typeof(Convex.permutedims_matrix),NTuple{6,Int64},Array{Int64,1}})
    precompile(Tuple{typeof(Convex.permutedims_matrix),Tuple{Int64,Int64,Int64},Array{Int64,1}})
    precompile(Tuple{typeof(Convex.unpackvec),Array{Float64,1},Tuple{Int64,Int64},Bool})
    precompile(Tuple{typeof(broadcast),typeof(*),Array{Float64,2},Convex.AdditionAtom})
    precompile(Tuple{typeof(broadcast),typeof(*),Array{Float64,2},Convex.TransposeAtom})
    precompile(Tuple{typeof(collect),Base.Generator{Tuple{Convex.AdditionAtom,Convex.AdditionAtom,Convex.MultiplyAtom},typeof(length)}})
    precompile(Tuple{typeof(collect),Base.Generator{Tuple{Variable,Convex.AdditionAtom},typeof(length)}})
    precompile(Tuple{typeof(collect),Base.Generator{Tuple{Variable,Convex.MultiplyAtom},typeof(length)}})
    precompile(Tuple{typeof(collect),Base.Generator{Tuple{Variable,Convex.TransposeAtom},typeof(length)}})
    precompile(Tuple{typeof(collect),Base.Generator{Tuple{Variable,Variable},typeof(length)}})
    precompile(Tuple{typeof(evaluate),Constant{LinearAlgebra.Adjoint{Complex{Float64},Array{Complex{Float64},1}}}})
    precompile(Tuple{typeof(evaluate),Constant{LinearAlgebra.Adjoint{Float64,Array{Float64,2}}}})
    precompile(Tuple{typeof(evaluate),Constant{LinearAlgebra.Adjoint{Int64,Array{Int64,1}}}})
    precompile(Tuple{typeof(evaluate),Constant{LinearAlgebra.Adjoint{Int64,Array{Int64,2}}}})
    precompile(Tuple{typeof(evaluate),Constant{SparseArrays.SparseMatrixCSC{Float64,Int64}}})
    precompile(Tuple{typeof(evaluate),Constant{SparseArrays.SparseMatrixCSC{Int64,Int64}}})
    precompile(Tuple{typeof(evaluate),Convex.AbsAtom})
    precompile(Tuple{typeof(evaluate),Convex.AdditionAtom})
    precompile(Tuple{typeof(evaluate),Convex.GeoMeanAtom})
    precompile(Tuple{typeof(evaluate),Convex.MinAtom})
    precompile(Tuple{typeof(evaluate),Convex.RationalNormAtom})
    precompile(Tuple{typeof(getindex),Constant{Array{Float64,2}},Int64,Int64})
    precompile(Tuple{typeof(getindex),Tuple{Convex.MultiplyAtom,Variable,Convex.AdjointAtom,Convex.MultiplyAtom},UnitRange{Int64}})
    precompile(Tuple{typeof(getindex),Tuple{Variable,Constant{LinearAlgebra.Adjoint{Int64,Array{Int64,1}}},Constant{Array{Int64,1}},Variable},UnitRange{Int64}})
    precompile(Tuple{typeof(getindex),Tuple{Variable,Convex.AdjointAtom,Variable,Variable},UnitRange{Int64}})
    precompile(Tuple{typeof(getindex),Tuple{Variable,Variable,Convex.AdjointAtom,Variable},UnitRange{Int64}})
    precompile(Tuple{typeof(hcat),Convex.AdjointAtom,Convex.MultiplyAtom})
    precompile(Tuple{typeof(hcat),Convex.ImaginaryAtom,Convex.RealAtom})
    precompile(Tuple{typeof(hcat),Convex.RealAtom,Convex.NegateAtom})
    precompile(Tuple{typeof(hcat),Variable,Array{Float64,2}})
    precompile(Tuple{typeof(hvcat),Tuple{Int64,Int64},Convex.MultiplyAtom,Vararg{Union{Convex.AbstractExpr, Number, AbstractArray},N} where N})
    precompile(Tuple{typeof(hvcat),Tuple{Int64,Int64},Convex.RealAtom,Vararg{Union{Convex.AbstractExpr, Number, AbstractArray},N} where N})
    precompile(Tuple{typeof(hvcat),Tuple{Int64,Int64},Variable,Vararg{Union{Convex.AbstractExpr, Number, AbstractArray},N} where N})
    precompile(Tuple{typeof(isposdef),Convex.TransposeAtom})
    precompile(Tuple{typeof(minimize),Convex.QolElemAtom,Array{Convex.GtConstraint,1}})
    precompile(Tuple{typeof(partialtrace),Array{Complex{Float64},2},Int64,Array{Int64,1}})
    precompile(Tuple{typeof(partialtrace),Constant{Array{Float64,2}},Int64,Array{Int64,1}})
    precompile(Tuple{typeof(partialtrace),Convex.TransposeAtom,Int64,Array{Int64,1}})
    precompile(Tuple{typeof(sign),Convex.DiagAtom})
    precompile(Tuple{typeof(sumsquares),Convex.AdditionAtom})
    precompile(Tuple{typeof(tr),Convex.TransposeAtom})
    precompile(Tuple{typeof(vexity),Convex.AdditionAtom})
    precompile(Tuple{typeof(vexity),Convex.GeoMeanAtom})
    precompile(Tuple{typeof(vexity),Convex.HcatAtom})
    precompile(Tuple{typeof(vexity),Convex.MultiplyAtom})
    precompile(Tuple{typeof(⪰),Convex.TransposeAtom,Int64})
    precompile(Tuple{typeof(⪰),Variable,Int64})

    # SparseArrays
    precompile(Tuple{Core.kwftype(typeof(Base.sum)),NamedTuple{(:dims,),Tuple{Int64}},typeof(sum),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{Core.kwftype(typeof(Base.sum)),NamedTuple{(:dims,),Tuple{Int64}},typeof(sum),SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(*),Array{Complex{Float64},2},SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(*),Array{Complex{Float64},2},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(*),Base.ReshapedArray{Float64,2,SparseArrays.SparseMatrixCSC{Float64,Int64},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(*),Complex{Float64},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(*),Float64,SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(*),Float64,SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(*),Int64,SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(*),Int64,SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Bool,Int64},SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},Int64})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Float64},1}})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Float64,Int64},Int64})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Float64,Int64},LinearAlgebra.Transpose{Float64,Array{Float64,2}}})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(*),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(+),Array{Complex{Float64},2},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(+),Array{Complex{Int64},2},SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(+),Array{Complex{Int64},2},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(+),Array{Float64,2},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(+),Array{Int64,2},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(+),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(+),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(+),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Int64},2}})
    precompile(Tuple{typeof(+),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Int64,2}})
    precompile(Tuple{typeof(+),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(+),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(Base._mapreduce),typeof(identity),Function,IndexCartesian,SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(Base._mapreduce),typeof(identity),Function,IndexCartesian,SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(SparseArrays.sparse),Array{Int64,1},Array{Int64,1},Array{Float64,1},Int64,Int64,Function})
    precompile(Tuple{typeof(SparseArrays.sparse),Base.ReshapedArray{Bool,2,PermutedDimsArray{Bool,10,(4, 2, 5, 3, 1, 6, 7, 8, 9, 10),(5, 2, 4, 1, 3, 6, 7, 8, 9, 10),Array{Bool,10}},NTuple{9,Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(SparseArrays.sparse),Base.ReshapedArray{Bool,2,PermutedDimsArray{Bool,12,(1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12),(1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12),Array{Bool,12}},NTuple{11,Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(SparseArrays.sparse),Base.ReshapedArray{Bool,2,PermutedDimsArray{Bool,12,(1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 11, 12),(1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 11, 12),Array{Bool,12}},NTuple{11,Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(SparseArrays.sparse),Base.ReshapedArray{Bool,2,PermutedDimsArray{Bool,12,(4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12),(4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12),Array{Bool,12}},NTuple{11,Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(SparseArrays.sparse),Base.ReshapedArray{Bool,2,PermutedDimsArray{Bool,4,(1, 2, 3, 4),(1, 2, 3, 4),Array{Bool,4}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(SparseArrays.sparse),Base.ReshapedArray{Bool,2,PermutedDimsArray{Bool,6,(2, 3, 1, 4, 5, 6),(3, 1, 2, 4, 5, 6),Array{Bool,6}},NTuple{5,Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(SparseArrays.sparse),Base.ReshapedArray{Bool,2,PermutedDimsArray{Bool,8,(1, 2, 4, 3, 5, 6, 7, 8),(1, 2, 4, 3, 5, 6, 7, 8),Array{Bool,8}},NTuple{7,Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(SparseArrays.sparse),StepRange{Int64,Int64},UnitRange{Int64},Array{Float64,1},Int64,Int64,Function})
    precompile(Tuple{typeof(SparseArrays.sparse),UnitRange{Int64},Array{Int64,1},Array{Float64,1},Int64,Int64,Function})
    precompile(Tuple{typeof(SparseArrays.sparse),UnitRange{Int64},Array{Int64,1},Float64,Int64,Int64})
    precompile(Tuple{typeof(SparseArrays.sparse),UnitRange{Int64},UnitRange{Int64},Array{Float64,1},Int64,Int64,Function})
    precompile(Tuple{typeof(SparseArrays.sparse),UnitRange{Int64},UnitRange{Int64},Float64,Int64,Int64})
    precompile(Tuple{typeof(SparseArrays.spdiagm),Pair{Int64,Array{Float64,1}}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Complex{Float64},1},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Complex{Int64},1},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Float64,1},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Int64,1},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(broadcast),typeof(+),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},Array{Complex{Float64},1}})
    precompile(Tuple{typeof(broadcast),typeof(+),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(broadcast),typeof(+),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},Array{Float64,1}})
    precompile(Tuple{typeof(broadcast),typeof(+),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Float64},1}})
    precompile(Tuple{typeof(broadcast),typeof(+),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(broadcast),typeof(+),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Float64,1}})
    precompile(Tuple{typeof(broadcast),typeof(+),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Int64,1}})
    precompile(Tuple{typeof(getindex),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},Int64,Colon})
    precompile(Tuple{typeof(getindex),SparseArrays.SparseMatrixCSC{Float64,Int64},Int64,Colon})
    precompile(Tuple{typeof(hcat),Array{Float64,2},Array{Float64,1}})
    precompile(Tuple{typeof(hcat),Array{Float64,2},Array{Float64,2},Array{Float64,2}})
    precompile(Tuple{typeof(hcat),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(hcat),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Int64,Int64}})
    precompile(Tuple{typeof(hvcat),Tuple{Int64,Int64},SparseArrays.SparseMatrixCSC{Float64,Int64},Vararg{Union{LinearAlgebra.UniformScaling, Union{AbstractArray{T,1}, AbstractArray{T,2}} where T},N} where N})
    precompile(Tuple{typeof(kron),Array{Int64,1},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(kron),LinearAlgebra.Transpose{Complex{Float64},Array{Complex{Float64},1}},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(kron),LinearAlgebra.Transpose{Float64,Array{Float64,1}},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(kron),LinearAlgebra.Transpose{Float64,Array{Float64,2}},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(kron),LinearAlgebra.Transpose{Float64,Base.ReshapedArray{Float64,1,LinearAlgebra.Adjoint{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(kron),LinearAlgebra.Transpose{Float64,SparseArrays.SparseMatrixCSC{Float64,Int64}},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(kron),LinearAlgebra.Transpose{Int64,Array{Int64,1}},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(kron),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Float64},2}})
    precompile(Tuple{typeof(kron),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Float64,2}})
    precompile(Tuple{typeof(kron),SparseArrays.SparseMatrixCSC{Float64,Int64},LinearAlgebra.Adjoint{Complex{Float64},Array{Complex{Float64},1}}})
    precompile(Tuple{typeof(kron),SparseArrays.SparseMatrixCSC{Float64,Int64},LinearAlgebra.Adjoint{Float64,Array{Float64,1}}})
    precompile(Tuple{typeof(kron),SparseArrays.SparseMatrixCSC{Float64,Int64},LinearAlgebra.Adjoint{Float64,Array{Float64,2}}})
    precompile(Tuple{typeof(kron),SparseArrays.SparseMatrixCSC{Float64,Int64},LinearAlgebra.Adjoint{Int64,Array{Int64,1}}})
    precompile(Tuple{typeof(kron),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Int64,Int64}})
    precompile(Tuple{typeof(repeat),SparseArrays.SparseMatrixCSC{Float64,Int64},Int64,Int64})
    precompile(Tuple{typeof(setindex!),SparseArrays.SparseMatrixCSC{Float64,Int64},Float64,Int64,Int64})
    precompile(Tuple{typeof(vcat),Array{Complex{Int64},1},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(vcat),Array{Int64,1},SparseArrays.SparseMatrixCSC{Float64,Int64}})
    precompile(Tuple{typeof(vcat),SparseArrays.SparseMatrixCSC{Complex{Float64},Int64},SparseArrays.SparseMatrixCSC{Complex{Float64},Int64}})
    precompile(Tuple{typeof(vcat),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Float64},1}})
    precompile(Tuple{typeof(vcat),SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(vcat),SparseArrays.SparseMatrixCSC{Float64,Int64},Base.ReshapedArray{Int64,1,LinearAlgebra.Adjoint{Int64,Array{Int64,1}},Tuple{}}})
    precompile(Tuple{typeof(vcat),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Complex{Float64},1}})
    precompile(Tuple{typeof(vcat),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Float64,Int64},Array{Float64,1}})
    precompile(Tuple{typeof(vcat),SparseArrays.SparseMatrixCSC{Float64,Int64},SparseArrays.SparseMatrixCSC{Float64,Int64}})

    # Base

    isdefined(Base.Sort, Symbol("##sort!#7")) && precompile(Tuple{getfield(Base.Sort, Symbol("##sort!#7")),Base.Sort.QuickSortAlg,Function,Function,Bool,Base.Order.ForwardOrdering,typeof(sort!),Array{Int64,1}})
    isdefined(Base.Sort, Symbol("##sortperm#11")) && precompile(Tuple{getfield(Base.Sort, Symbol("##sortperm#11")),Base.Sort.QuickSortAlg,Function,Function,Nothing,Base.Order.ForwardOrdering,typeof(sortperm),Array{Float64,1}})
    precompile(Tuple{Core.kwftype(typeof(Base.Sort.sort)),NamedTuple{(:rev,),Tuple{Bool}},typeof(sort),Array{Float64,1}})
    precompile(Tuple{Core.kwftype(typeof(Base.Sort.sort)),NamedTuple{(:rev,),Tuple{Bool}},typeof(sort),Array{Int64,1}})
    precompile(Tuple{Core.kwftype(typeof(Base.sum)),NamedTuple{(:dims,),Tuple{Int64}},typeof(sum),Array{Float64,2}})
    precompile(Tuple{Type{PermutedDimsArray{Bool,10,(4, 2, 5, 3, 1, 6, 7, 8, 9, 10),(5, 2, 4, 1, 3, 6, 7, 8, 9, 10),Array{Bool,10}}},Array{Bool,10}})
    precompile(Tuple{Type{PermutedDimsArray{Bool,12,(1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12),(1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12),Array{Bool,12}}},Array{Bool,12}})
    precompile(Tuple{Type{PermutedDimsArray{Bool,12,(1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 11, 12),(1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 11, 12),Array{Bool,12}}},Array{Bool,12}})
    precompile(Tuple{Type{PermutedDimsArray{Bool,12,(4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12),(4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12),Array{Bool,12}}},Array{Bool,12}})
    precompile(Tuple{Type{PermutedDimsArray{Bool,4,(1, 2, 3, 4),(1, 2, 3, 4),Array{Bool,4}}},Array{Bool,4}})
    precompile(Tuple{Type{PermutedDimsArray{Bool,6,(2, 3, 1, 4, 5, 6),(3, 1, 2, 4, 5, 6),Array{Bool,6}}},Array{Bool,6}})
    precompile(Tuple{Type{PermutedDimsArray{Bool,8,(1, 2, 4, 3, 5, 6, 7, 8),(1, 2, 4, 3, 5, 6, 7, 8),Array{Bool,8}}},Array{Bool,8}})
    precompile(Tuple{Type{PermutedDimsArray},Array{Bool,10},NTuple{10,Int64}})
    precompile(Tuple{Type{PermutedDimsArray},Array{Bool,12},NTuple{12,Int64}})
    precompile(Tuple{Type{PermutedDimsArray},Array{Bool,4},NTuple{4,Int64}})
    precompile(Tuple{Type{PermutedDimsArray},Array{Bool,6},NTuple{6,Int64}})
    precompile(Tuple{Type{PermutedDimsArray},Array{Bool,8},NTuple{8,Int64}})
    precompile(Tuple{typeof(*),Array{Complex{Float64},1},Int64})
    precompile(Tuple{typeof(*),Array{Complex{Int64},1},Int64})
    precompile(Tuple{typeof(*),Array{Float64,1},Int64})
    precompile(Tuple{typeof(*),Array{Float64,2},Float64})
    precompile(Tuple{typeof(*),Array{Float64,2},Int64})
    precompile(Tuple{typeof(*),Array{Int64,1},Float64})
    precompile(Tuple{typeof(*),Array{Int64,1},Int64})
    precompile(Tuple{typeof(*),Float64,Array{Complex{Float64},2}})
    precompile(Tuple{typeof(*),Float64,Array{Float64,2}})
    precompile(Tuple{typeof(*),Int64,Array{Complex{Float64},1}})
    precompile(Tuple{typeof(*),Int64,Array{Float64,1}})
    precompile(Tuple{typeof(+),Array{Complex{Float64},1},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(+),Array{Float64,1},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(+),Array{Float64,1},Array{Int64,1}})
    precompile(Tuple{typeof(+),Array{Int64,1},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(+),Array{Int64,1},Array{Int64,1}})
    precompile(Tuple{typeof(-),Array{Complex{Float64},1}})
    precompile(Tuple{typeof(-),Array{Float64,2},Array{Int64,1}})
    precompile(Tuple{typeof(/),Array{Complex{Float64},2},Complex{Float64}})
    precompile(Tuple{typeof(/),Array{Float64,2},Float64})
    precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Function,Array{Float64,1},Val{2}})
    precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Function,Float64,Val{2}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(*),Tuple{Array{Float64,1},Array{Array{Complex{Float64},2},1}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(*),Tuple{Array{Float64,1},Array{Int64,1}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(*),Tuple{Array{Int64,1},Array{Float64,1}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{2}}}},Array{Float64,1}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(>=),Tuple{Array{Int64,1},Int64}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(^),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(abs),Tuple{Array{Float64,1}}},Rational{Int64}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(max),Tuple{Array{Float64,1},Int64}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(*),Tuple{Array{Float64,1},Array{Float64,2}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(*),Tuple{Array{Int64,1},Array{Float64,2}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(*),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(^),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(abs),Tuple{Array{Float64,2}}},Float64}},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(sign),Tuple{Array{Float64,2}}}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(*),Tuple{Int64,Array{Float64,2}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(^),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(abs),Tuple{Array{Float64,2}}},Float64}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(^),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(abs),Tuple{Array{Float64,2}}},Rational{Int64}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(max),Tuple{Array{Float64,2},Array{Float64,2}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Nothing,typeof(min),Tuple{Array{Float64,2},Array{Float64,2}}}})
    precompile(Tuple{typeof(Base.Cartesian._nloops),Int64,Symbol,Symbol,Expr,Vararg{Expr,N} where N})
    precompile(Tuple{typeof(Base.Threads.resize_nthreads!),Array{BigInt,1},BigInt})
    precompile(Tuple{typeof(Base.__cat),Array{Int64,1},Tuple{Int64},Tuple{Bool},Array{Int64,1},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base._mapreduce),Function,Function,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}})
    precompile(Tuple{typeof(Base._mapreduce_dim),Function,Function,NamedTuple{(),Tuple{}},UnitRange{Int64},Colon})
    precompile(Tuple{typeof(Base.add_sum),Array{Complex{Float64},2},Array{Complex{Float64},2}})
    precompile(Tuple{typeof(Base.require),Module,Symbol})
    precompile(Tuple{typeof(Base.time_print),UInt64,Int64,Int64,Int64})
    precompile(Tuple{typeof(Base.typed_hvcat),Type{Float64},NTuple{4,Int64},Float64,Vararg{Number,N} where N})
    precompile(Tuple{typeof(Base.vect),Regex,Vararg{Regex,N} where N})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Complex{Float64},1},Array{Complex{Int64},2}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Complex{Float64},2},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Complex{Int64},1},Array{Float64,2}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Float64,1},Array{Complex{Float64},2}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Float64,1},Array{Complex{Int64},2}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Float64,1},Array{Float64,2}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Float64,1},Array{Int64,2}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Float64,2},Array{Complex{Float64},1}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Float64,2},Array{Complex{Int64},1}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Float64,2},Array{Int64,1}})
    precompile(Tuple{typeof(broadcast),typeof(+),Array{Int64,1},Array{Float64,2}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(exp),Tuple{Array{Float64,1}}}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(imag),Tuple{Array{Float64,1}}}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(real),Tuple{Array{Float64,1}}}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(sqrt),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(*),Tuple{Array{Float64,1},Array{Float64,1}}}}}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(abs),Tuple{Array{Float64,2}}}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(real),Tuple{Array{Complex{Float64},2}}}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2},Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(real),Tuple{Array{Float64,2}}}})
    precompile(Tuple{typeof(getindex),Array{Complex{Float64},1},Int64,Function})
    precompile(Tuple{typeof(getindex),Array{Float64,1},Int64,Function})
    precompile(Tuple{typeof(getindex),Array{Float64,1},UnitRange{Int64},UnitRange{Int64}})
    precompile(Tuple{typeof(hcat),Float64,Float64})
    precompile(Tuple{typeof(hvcat),Tuple{Int64,Int64,Int64},Float64,Vararg{Float64,N} where N})
    precompile(Tuple{typeof(hvcat),Tuple{Int64,Int64,Int64},Int64,Vararg{Int64,N} where N})
    precompile(Tuple{typeof(hvcat),Tuple{Int64,Int64},Int64,Vararg{Int64,N} where N})
    precompile(Tuple{typeof(imag),Array{Complex{Float64},1}})
    precompile(Tuple{typeof(maximum),Array{Float64,1}})
    precompile(Tuple{typeof(maximum),Array{Float64,2}})
    precompile(Tuple{typeof(permutedims),Array{Complex{Float64},6},Array{Int64,1}})
    precompile(Tuple{typeof(permutedims),Array{Float64,3},Array{Int64,1}})
    precompile(Tuple{typeof(permutedims),Array{Float64,4},Array{Int64,1}})
    precompile(Tuple{typeof(permutedims),Array{Float64,5},Array{Int64,1}})
    precompile(Tuple{typeof(real),Array{Complex{Float64},1}})
    precompile(Tuple{typeof(repeat),Array{Complex{Float64},1},Int64,Int64})
    precompile(Tuple{typeof(repeat),Array{Complex{Int64},1},Int64,Int64})
    precompile(Tuple{typeof(repeat),Array{Float64,1},Int64,Int64})
    precompile(Tuple{typeof(repeat),Array{Int64,1},Int64,Int64})
    precompile(Tuple{typeof(reshape),PermutedDimsArray{Bool,10,(4, 2, 5, 3, 1, 6, 7, 8, 9, 10),(5, 2, 4, 1, 3, 6, 7, 8, 9, 10),Array{Bool,10}},Tuple{Int64,Int64}})
    precompile(Tuple{typeof(reshape),PermutedDimsArray{Bool,12,(1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12),(1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12),Array{Bool,12}},Tuple{Int64,Int64}})
    precompile(Tuple{typeof(reshape),PermutedDimsArray{Bool,12,(1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 11, 12),(1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 11, 12),Array{Bool,12}},Tuple{Int64,Int64}})
    precompile(Tuple{typeof(reshape),PermutedDimsArray{Bool,12,(4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12),(4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12),Array{Bool,12}},Tuple{Int64,Int64}})
    precompile(Tuple{typeof(reshape),PermutedDimsArray{Bool,4,(1, 2, 3, 4),(1, 2, 3, 4),Array{Bool,4}},Tuple{Int64,Int64}})
    precompile(Tuple{typeof(reshape),PermutedDimsArray{Bool,6,(2, 3, 1, 4, 5, 6),(3, 1, 2, 4, 5, 6),Array{Bool,6}},Tuple{Int64,Int64}})
    precompile(Tuple{typeof(reshape),PermutedDimsArray{Bool,8,(1, 2, 4, 3, 5, 6, 7, 8),(1, 2, 4, 3, 5, 6, 7, 8),Array{Bool,8}},Tuple{Int64,Int64}})
    precompile(Tuple{typeof(sum),Array{Array{Complex{Float64},2},1}})
    precompile(Tuple{typeof(sum),Array{Complex{Float64},1}})
    precompile(Tuple{typeof(vcat),Float64})
    precompile(Tuple{typeof(vcat),Int64})
    precompile(Tuple{typeof(view),Array{Float64,1},UnitRange{Int64}})

    # LinearAlgebra
    precompile(Tuple{typeof(*),Array{Complex{Float64},2},Array{Complex{Float64},2}})
    precompile(Tuple{typeof(*),Array{Complex{Float64},2},Diagonal{Float64,Array{Float64,1}},LinearAlgebra.Adjoint{Complex{Float64},Array{Complex{Float64},2}}})
    precompile(Tuple{typeof(*),Array{Float64,1},Array{Float64,2}})
    precompile(Tuple{typeof(*),Array{Float64,2},Array{Float64,1}})
    precompile(Tuple{typeof(*),Array{Float64,2},Base.ReshapedArray{Float64,1,LinearAlgebra.Adjoint{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(*),Array{Float64,2},LinearAlgebra.Adjoint{Float64,Array{Float64,2}}})
    precompile(Tuple{typeof(*),Array{Int64,2},Array{Float64,1}})
    precompile(Tuple{typeof(*),LinearAlgebra.Adjoint{Float64,Array{Float64,1}},Array{Float64,2},Array{Float64,1}})
    precompile(Tuple{typeof(*),LinearAlgebra.Adjoint{Float64,Array{Float64,2}},LinearAlgebra.Adjoint{Float64,Array{Float64,2}}})
    precompile(Tuple{typeof(*),LinearAlgebra.Adjoint{Int64,Array{Int64,1}},Array{Float64,2},Array{Int64,1}})
    precompile(Tuple{typeof(-),Diagonal{Float64,Array{Float64,1}},Diagonal{Int64,Array{Int64,1}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{LinearAlgebra.StructuredMatrixStyle{Diagonal{Float64,Array{Float64,1}}},Nothing,typeof(<=),Tuple{Base.Broadcast.Broadcasted{LinearAlgebra.StructuredMatrixStyle{Diagonal{Float64,Array{Float64,1}}},Nothing,typeof(abs),Tuple{Diagonal{Float64,Array{Float64,1}}}},Float64}}})
    precompile(Tuple{typeof(LinearAlgebra.det),Array{Float64,2}})
    precompile(Tuple{typeof(eigmin),Array{Float64,2}})
    precompile(Tuple{typeof(hcat),LinearAlgebra.Transpose{Float64,Array{Float64,2}},Array{Float64,2}})
    precompile(Tuple{typeof(hcat),LinearAlgebra.Transpose{Float64,Array{Float64,2}},LinearAlgebra.Transpose{Float64,Array{Float64,2}}})
    precompile(Tuple{typeof(inv),Array{Float64,2}})
    precompile(Tuple{typeof(norm),Base.ReshapedArray{Float64,1,LinearAlgebra.Transpose{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})
    precompile(Tuple{typeof(sum),LinearAlgebra.Transpose{Float64,Array{Float64,2}}})
end
